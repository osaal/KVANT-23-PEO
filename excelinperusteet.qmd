# Excelin perusteet {#sec-excelin-perusteet}

Microsoft Excel on **taulukkolaskentaohjelma**. Tällä tarkoitetaan, että kaikki työ tehdään **taulukoissa**, joita Excel kutsuu myös **työkirjoiksi**. Työkirjan tunnistaa päätteestä `.xlsx`[^excelinperusteet-1]. Jokainen työkirja sisältää yhden tai useamman **työlehtiön**, joiden sisältä löytyy **taulukkoalue**.

[^excelinperusteet-1]: Aikaisemmissa Excel-versioissa myös `.xls`. Toinen yleinen taulukkomuoto on `.csv`.

Taulukkoalue jaetaan **soluihin**, joilla on **rivi- ja sarakeosoitteet**. Excelissä rivit ovat numeroituna yhdestä ylöspäin, ja sarakkeet merkitään kirjaimilla A-Z. Jos sarakkeita on useampi kuin 26, Excel automaattisesti aloittaa seuraavan sarakesarjan nimen AA, AB, ja niin eteenpäin.

[Excelissä kaikki työ tehdään taulukkoalueella]{.underline}. Voit lisätä ja poistaa **arvoja** (numeroita, tekstiä, verkko-osoitteita, melkein mitä tahansa), tehdä laskentoja arvoille, tuottaa kuvioita, automatisoida analyysia, ja vaikka mitä.

## Arvotyypit {#sec-arvotyypit}

Excelissä on neljä **alkeellista** arvo- tai datatyyppiä: numerot, teksti, loogiset ja virheet.

**Numerodata** on, kuten nimi ehdottaa, numeroita. Ne voivat olla desimaalilukuja (esim. `0.5`), kokonaislukuja (`13`), prosentteja (`15%`), päivämääriä (`16/03/2005`) tai jopa puhelinnumeroita (`0501234567`). Koska Exceliä ei sinänsä kiinnosta millainen numeroarvo on kyseessä, voi joskus sattua hassuja odottamattomuuksia. Excel antaa esimerkiksi sinun ynnätä päivämäärän ja prosentin yhteen - mutta mitä tulos on, sen tietää vain Excel itse.

**Tekstidata** on ihmisluettavaa tekstiä, kuten lauseita, sanoja, merkkejä tai fyysisiä osoitteita. Näille löytyy omat työkalut Excelissä, joten pystyt myös käsittelemään tekstidataa koneella Excelissä.

**Loogisia arvoja tai totuusarvoja** ovat arvot `TOSI` ja `EPÄTOSI`. Näitä käytetään paljon Excelissä, myöskin funktioiden sisällä, joten niiden tunnistaminen on tärkeää. Jos yrität ynnätä loogisia arvoja yhteen, Excel yleensä pakottaa ne numeromuotoon: `TOSI = 1, EPÄTOSI = 0`. Loogisille arvoille löytyy neljä perustoimintoa: `JA, TAI, EHDOTON.TAI, EI`. Näistä lisää [alaluvussa @sec-loogisten-ehtojen-totuustaulukot].

**Virhearvot** ovat Excelin erikoisuus. Jos Excel tunnistaa jonkun laskuvirheen tai muun teknisen virheen, se palauttaa yleensä virhearvon. Näitä voi myös itse tuottaa virhearvofunktioilla, jos siihen on tarvetta. Virhearvot ovat:

-   **#NIMI?** Soluviittaus ei ole oikein, kirjoitusvirhe funktiossa tai puuttuvat lainausmerkit.

-   **#JAKO/0** Yrität jakaa jonkun numeron nollalla, mikä ei ole mahdollista.

-   **#VIITE!** Viittaus menee jotenkin pieleen.

-   **#NUMERO!** Arvo, jonka Excel yrittää laskea, on liian iso yhdelle solulle. Voi myös esiintyä virheellisesti kirjoitetussa funktiossa.

-   **#N/A** Voit käyttää tätä arvoa itse, jos haluat Excelin hyppäävän yli jonkun solun tilapäisesti. Joskus Excel myös automaattisesti korvaa tämän arvon jollain muulla. Ole siis varovainen sen käytön kanssa!

-   **#ARVO!** Yrität tehdä jotain arvotyypille, jota sille ei voi tehdä. Esimerkiksi ynnäät tekstiä ja numeroita yhteen.

-   **#TYHJÄ!** Yrität hakea kahden matriisin risteämiskohtia, mutta sellaista ei ole. Esiintyy myös jos merkitset useamman solualueen ilman puolipilkkua välissä, sekä joissain muissa tilanteissa.

## Arvojen manipulointi Excelissä {#sec-arvojen-manipulointi-excelissä}

"Manipulointi" voi kuulostaa pahaenteiseltä, mutta sanalla tarkoitetaan vain arvojen muokkaamista, muuttamista ja hyödyntämistä laskennoissa.

[Excelin operaattorit voidaan jakaa neljään kategoriaan]{.underline}: **aritmeettiset**, **vertailevat**, **tekstiä yhdistävät** ja **viittausoperaattorit**. Alla olevassa taulukossa selitetään kaikki operaattorit ja niiden toiminnat.

| Merkki                              | Merkitys                                                                             | Esimerkki                                                                             |
|------------------|----------------------------|--------------------------|
| **Aritmeettiset operaattorit**      |                                                                                      |                                                                                       |
| `+` (plus)                          | Ynnääminen                                                                           | `2 + 3 = 5`                                                                           |
| `-` (minus)                         | Vähentäminen                                                                         | `2 - 5 = -3`                                                                          |
| `*` (tähti)                         | Kertominen                                                                           | `4 * 2 = 8`                                                                           |
| `/` (vinoviiva)                     | Jakaminen                                                                            | `8 / 4 = 2`                                                                           |
| `%` (prosentti)                     | Prosentti                                                                            | `20%`                                                                                 |
| `^` (karetti)                       | Potenssi                                                                             | `5 ^ 2 = 25`                                                                          |
| **Vertailevat operaattorit**        |                                                                                      |                                                                                       |
| `=` (yhtäläisyys)                   | Yhtä kuin                                                                            | `1 = 2` (epätosi)                                                                     |
| `>` (suuruus)                       | Suurempi kuin                                                                        | `5 > 1` (tosi)                                                                        |
| `<` (pienuus)                       | Pienempi kuin                                                                        | `6 < 9` (tosi)                                                                        |
| `>=` (suuruus ja yhtäläisyys)       | Suurempi tai yhtä kuin                                                               | `1 >= 2` (epätosi)                                                                    |
| `<=` (pienuus ja yhtäläisyys)       | Pienempi tai yhtä kuin                                                               | `6 <= 6` (tosi)                                                                       |
| `<>` (pienuus ja suuruus)           | Ei yhtä kuin / eri kuin                                                              | `7 <> 9` (tosi)                                                                       |
| **Tekstiä yhdistävät operaattorit** |                                                                                      |                                                                                       |
| `&` (ampersandi)                    | Yhdistää kaksi tekstiarvoa yhdeksi. Ei lisää välilyöntejä tai muita merkkejä väliin! | `"Pelastus"&"laitos" = "Pelastuslaitos"`                                              |
| **Viiteoperaattorit**               |                                                                                      |                                                                                       |
| `:` (kaksoispiste)                  | Solualue                                                                             | `A1:A4 = A1, A2, A3, A4`                                                              |
| `;` (puolipilkku)                   | Yhdistää kaksi solualuetta yhdeksi                                                   | `A1:A3;B1:B3 = A1, A2, A3, B1, B2, B3`                                                |
| (välilyönti)                        | Hakee kahden solualueen yhteisen alueen viitteen                                     | `A1:D1 C1:C4 = C1` (ainoa solu, joka löytyy molemmista janoista)                      |
| `#` (risuaita)                      | Viittaa dynaamiseen matriisiin                                                       | `A1#` = Niin monta solua, kuin dynaaminen funktio solussa `A1` tuottaa                |
| `!` (huutomerkki)                   | Ilmaisee solualueen sijaitsevan jossain muualla                                      | `Taul1!A1` hakee solun `A1` työlehtiöstä `Taul1`, vaikka olisit työlehtiössä `Taul4`. |

: Excelin operaattorit {#tbl-excelin-operaattorit}

Näiden lisäksi Excelissä voi käyttää sulkuja `( )` laskentajärjestyksen määrittelyyn. Tämä on erittäin suositeltavaa, sillä **Excel ei aina noudata perinteistä laskentajärjestystä**! Excel laskee vasemmalta oikealle, tietyn suosiojärjestyksen mukaan. Voit kuitenkin aina itse määritellä järjestyksen suluilla.

**Aritmeettisia ja vertailevia operaattoreita** käytetään kuten matematiikassa yleensä. Huomioi kuitenkin eri-kuin-operaattori `<>`, joka muotoillaan eri tavalla kuin monessa muussa kontekstissa.

Kun määrittelet soluun jotain laskettavaksi, eteen tulee aina **yhtäläisyysmerkki** `=`. Tämä kertoo Excelille, että seuraavaksi lasketaan jotain.

Huomaa vielä, että **viiteoperaattort** voivat toimia hieman eri tavoin riippuen käyttökontekstista. Esimerkkinä puolipilkku: puolipilkkua käytetään funktioiden parametrien erittelyssä (ks. alla) suomenkielisessä Excelissä, jolloin se ei yhdistä matriisialueita funktion sisällä.

## Loogisten ehtojen totuustaulukot {#sec-loogisten-ehtojen-totuustaulukot}

Kun käsittelemme loogisia ehtoja, voimme hyödyntää niin sanottuja **totuustaulukoita**. Nämä kertovat meille, mikä lopputulos on kun kaksi totuusarvoa yhdistetään tietyllä ehdolla.

`JA`-ehto täyttyy, kun molemmat totuusarvot ovat `TOSI`. Sen totuustaulukko on:

|               |               |            |
|---------------|---------------|------------|
| **`JA`-ehto** | `a = EPÄTOSI` | `a = TOSI` |
| `b = EPÄTOSI` | `EPÄTOSI`     | `EPÄTOSI`  |
| `b = TOSI`    | `EPÄTOSI`     | `TOSI`     |

: `JA`-ehdon totuustaulukko {#tbl-ja-totuus .striped .hover}

`TAI`-ehto täyttyy, kun jompikumpi totuusarvoista on `TOSI` (tai molemmat). Sen totuustaulukko on:

|                |               |            |
|----------------|---------------|------------|
| **`TAI`-ehto** | `a = EPÄTOSI` | `a = TOSI` |
| `b = EPÄTOSI`  | `EPÄTOSI`     | `TOSI`     |
| `b = TOSI`     | `TOSI`        | `TOSI`     |

: `TAI`-ehdon totuustaulukko {#tbl-tai-totuus .striped .hover}

`EHDOTON.TAI`-ehto täyttyy, kun jompikumpi totuusarvoista on `TOSI` (mutta ei molemmat!). Sen totuustaulukko on:

|                        |               |            |
|------------------------|---------------|------------|
| **`EHDOTON.TAI`-ehto** | `a = EPÄTOSI` | `a = TOSI` |
| `b = EPÄTOSI`          | `EPÄTOSI`     | `TOSI`     |
| `b = TOSI`             | `TOSI`        | `EPÄTOSI`  |

: `EHDOTON.TAI`-ehdon totuustaulukko {#tbl-ehdotontai-totuus .striped .hover}

`EI`-ehto täyttyy, kun annettu ehto on `EPÄTOSI`. Toisin sanoen, tämä ehto kääntää totuusarvon toisinpäin. Sen totuustaulukko on:

|               |               |            |
|---------------|---------------|------------|
| **`EI`-ehto** | `a = EPÄTOSI` | `a = TOSI` |
|               | `TOSI`        | `EPÄTOSI`  |

: `EI`-ehdon totuustaulukko {#tbl-ei-totuus .striped .hover}

## Solujen muokkaaminen {#sec-solujen-muokkaaminen}

Jos klikkaat mitä tahansa solua, solun ympärille syntyy **vihreä valintalaatikko**. Voit valita useamman solun vetämällä hiiren solujen yli, jolloin Excel maalaa kaikki valitsemasi solut tummanharmaalla ja osoittaa solujen valinnan suuremmalla valintalaatikolla.

Voit myös valita soluja näppäimistökomennoilla. Nämä ovat erittäin hyödyllisiä varsinkin tilanteissa, joissa haluat valita suuren määrän soluja kerralla (esim. 400 riviä ja 15 saraketta - kyllä, tämä tilanne tulee helposti vastaan!). Komennot ovat:

-   Nuolinäppäimet `Ylös`, `Alas`, `Vasen` ja `Oikea`: Siirry solualueella nuolen osoittamaan suuntaan.

-   `Shift + Nuolinäppäimet`: Lisää seuraava solu nuolen osoittamassa suunnassa valintaasi.

-   `Ctrl + Nuolinäppäimet`: Siirry seuraavaan soluun nuolen osoittamassa suunnassa, jossa on tietoja.

    -   Jos kaikki solut nuolen osoittamassa suunnassa ovat tyhjiä, Excel hyppää taulukon maksimirajaan (rivi 1 048 576, sarake XFD).

    -   Jos nykyisessä valitussa solussa on dataa, Excel siirtyy viimeiseen soluun nuolen osoittamassa suunnassa, jossa on dataa. Jos esim. olet laittanut numeroita soluihin A1, A2 ja A3, valitset solun A1 ja painat `Ctrl + Alas`, Excel hyppää soluun A3, koska se on viimeinen alla oleva solu josta löytyy dataa. Jos painat saman yhdistelmän uudelleen, Excel hyppää seuraavaan soluun, josta löytyy dataa. Jos sellaista ei ole, Excel hyppää viimeiselle mahdolliselle riville taulukossa.

    -   Jos nykyisessä valitussa solussa ei ole dataa, Excel siirtyy seuraavaan soluun nuolen osoittamassa suunnassa, jossa on dataa - tai viimeiselle mahdolliselle riville, jos dataa ei ollenkaan esiinny.

-   `Shift + Ctrl + Nuolinäppäimet`: Lisää kaikki dataa sisältävät solut nuolen osoittamassa suunnassa valintaan.

    -   Jos haluat valita ison taulukkoalueen kerralla, tämä on erinomainen komento. Sen sijaan, että valitset solun jostain taulukon nurkasta ja vedät hiiren vastakkaiseen nurkkaan, voit valita yhden nurkan, painaa `Shift + Ctrl + (ensimmäinen suunta, josta löytyy dataa)` ja sitten `Shift + Ctrl + (toinen suunta, josta löytyy dataa)`. Tämä valitsee automaattisesti koko taulukon!

[Voit muokata solujen sisältöä]{.underline} klikkaamalla solua ja aloittamalla kirjoittamisen. Voit myös tuplaklikata solua, jolloin näet vilkkuvan kirjoittamiskursorin solussa.

[Solun sisältöä voi myös muokata taulukkoalueen yläpuolela olevata **funktioalueesta**]{.underline}. Funktioalueen kätevänä osana on, että [voit laajentaa sitä haluamasi kokoon]{.underline}. Vie hiiren osoitin funktioalueen alareunalle, jolloin osoitin muuttuu veto-osoittimesi. Vedä sitten funktioalue haluamasi kooksi. Excel muistaa määrittelemäsi koon jokaiselle työkirjalle erikseen. Voit pienentää funktioalueen takaisin yhdeksi riviksi, tai laajentaa se yhdestä rivistä määittelemääsi kokoon, painamalla pientä karetti-ikonia funktioalueen oikeassa päädyssä.

[Funktioalueella voit myös **rivittää** kirjoittamasi funktiot/koodin]{.underline}. Kun kirjoitat tekstiä funktioalueelle, pidä `Alt`-näppäintä pohjassa ja paina `Enter`, jolloin saat rivilyönnin. Excel ei välitä rivilyönneistä funktion sisällä, joten voit vapaasti rivittää funktiosi haluamaasi rivirakenteeseen. Tämä voi olla hyödyllistä jos kirjoitat paljon sisäisiä funktioita (eli funktion, joka sisältää funktion, joka sisältää...), koska niiden lukeminen voi käydä nopeasti hyvin hankalaksi.

## Viittaaminen ja osoitteet {#sec-viittaaminen-ja-osoitteet}

Yksinkertaisimmillaan viittaaminen toiseen soluun onnistuu Excelissä samoin kuin yleisen laskennan kirjoittaminen.

::: {#fig-viit-esimerkki01 layout-nrow="2" layout-align="center"}
![Arvot näkyvissä](pics/viittaaminen/viit_esimerkki01a.png){#fig-viit-esimerkki01a}

![Kaavat näkyvissä](pics/viittaaminen/viit_esimerkki01b.png){#fig-viit-esimerkki01b}

Viittaaminen
:::

Kuvan [-@fig-viit-esimerkki01b] solussa B1 tehdään suora viittaus solun A1 sisältöön: `=A1`[^excelinperusteet-2]. Excel osaa silloin täyttää solun B1 solun A1 sisällöllä, mitä tahansa se on.

[^excelinperusteet-2]: Voit asettaa kaavat näkyville tai pois näkyvistä kohdasta `Kaavat > Näytä kaavat`.

[Vittaukset voivat olla pitkäkin ketju]{.underline} - B1 voi viitata A1:een, joka viittaa C4:ään, joka viittaa jonnekin muualle, ja niin eteenpäin. On kuitenkin suositeltavaa pitää viittausketju lyhyenä, koska sen seuraaminen voi olla hankalaa ketjun pidentyessä.

[Kaksoispisteillä `:` voit viitata solualueeseen]{.underline}. Tällöin Excel osaa hakea kaikki solut ensimmäisen ja toisen soluviittauksen välillä. Esimerkissä solussa C1 on summafunktio, jonka parametriksi on asetettu alue `A1:A3`. Excel hakee silloin kaikki arvot soluissa `{A1, A2, A3}`[^excelinperusteet-3], ja palauttaa ne summafunktiolle. Summafunktio laskee sitten palautetut solut yhteen, ja palauttaa lopputuloksen.

[^excelinperusteet-3]: Voit määritellä Excelissä arvojanan käyttäen aaltosulkeita `{ }`. Tämä on hyödyllistä, jos haluat esimerkiksi kokeilla jotain kaavaa tilapäisellä tiedolla, mutta et jostain syystä voi lisätä tietoa soluihin ja viitata niihin. Käytän aaltosulkeita tässä kirjassa sekä Excelin muodossa että matemaattisena merkintänä, mutta tulkinta on aina sama: arvot sulkujen välillä ovat yksiulotteinen matriisi, eli lista arvoja.

Esimerkkikuvassa solussa D1 on käytetty `JAKOJ`-funktiota, joka palauttaa jonkun jakolaskun jäännöksen. Sen ensimmäinen parametri on jakolaskun jaettava luku ja toinen parametri on laskun jakaja. Koska funktio viittaa soluihin `A3; A1`, Excel ajaa funktion asetuksilla `=JAKOJ(7; 5)`, jolloin tulokseksi tulee `2`.

[Viittaaminen voidaan siis ymmärtää eräänlaisena osoitteiden käyttönä]{.underline}. Jokaisella solulla on oma osoite, joka merkitään solun sarakekirjaimen ja rivinumeron avulla: solu `B7` löytyy sarakkeesta B, riviltä 7.

## Vetotoiminto {#sec-vetotoiminto}

Jos valitset minkä tahansa solun taulukkoalueella, huomaat, että solun ympäröivän vihreän laatikon alaoikeassa nurkassa on pieni neliö. Tätä voidaan kutsua **vetotoiminnoksi**.

Vetotoiminnolla voit monistaa kyseisen solun tietoja useampaan soluun. Jos asetat luvun `1` soluun `A1`, valitset solun, pidät hiirenpainiketta pohjassa vetotoiminnon päällä ja vedät alaspäin, Excel täyttää kaikki ylivedetyt solut samalla arvolla `1`. Näet tämän samaan aikaan kun vedät pienestä tekstiruudusta hiiriosoittimen oikealla puolella.

Vetotoiminnon erikoisuus on kuitenkin, että se pystyy automaattisesti muuttamaan arvoja tietyn logiikan mukaan. Jos asetat luvun `1` soluun `A1` ja luvun `2` soluun `A2`, valitset molemmat solut ja lähdet vetämään alaspäin vetotoiminnosta, Excel jatkaa numerosarjaa luvuilla `3, 4, 5`, ja niin edespäin!

[Tämä toimii oikeastaan millä tahansa datalla]{.underline}, ei vain yksinkertaisella numerosarjalla tai edes vain numeroilla. Excel tulkitsee automaattisesti, millainen datasarja on kyseessä (eri numerosarjat, fyysiset katuosoitteet, kuukaudet...) ja täyttää alueen sen mukaan[^excelinperusteet-4].

[^excelinperusteet-4]: Joskus tämä menee pieleen erittäin hauskasti. Excelillä oli ennen taipumusta automaattitäyttää kuukaudet tekstin mukaan: jos asetit soluihin `January` ja `February`, seuraaviksi arvoiksi Excel ehdotti `Maruary, Apruary` ja `Mayruary`. Käytä harkiten!

Vetotoiminto toimii myös viitteillä. Jos solussa `A1` on viittaus toiseen soluun, esim. `=B1`, ja vedät solun tietoja alaspäin, Excel muuttaa viittauksen aina rivin mukaan: soluun `A2` tulee `=B2`, soluun `A3` tulee `=B3`, ja niin edespäin. Sama koskee sarakkeita.

Jos haluat välttää vetotoiminnon viittausmuutoksia, voit käyttää **lukitustoimintoa**.

## Lukitustoiminto {#sec-lukitustoiminto}

**Lukitustoiminto** on solujen viittauksille määrätty toiminto, joka toimii operaattorilla `$`. Lukitusoperaattori kertoo Excelille, ettei sen tule siirtää viittausta jos solun tieto kopioidaan toiseen soluun tai monistetaan vetotoiminnolla.

[Lukitus tehdään erikseen riveille ja sarakkeille]{.underline}:

-   `=$A$1` lukitsee sekä sarakkeen että rivin. Jos tieto kopioitaisiin toiseen soluun tai monistettaisiin vetotoiminnolla, viittaus olisi aina soluun `A1`.

-   `=$A1` lukitsee sarakkeen, mutta ei riviä. Jos vetäisit tämän tiedon vasemmalle, kaikki pysyisi samana (koska vain sarake muuttuu, ja sarake on tässä tilanteessa lukittu). Jos vetäisin tiedon alaspäin, rivinumerointi kuitenkin muuttuisi (koska riviä ei olla lukittu).

-   `=A$1` lukitsee rivin, mutta ei saraketta. Tässä tapahtuisi päinvastaisesti kuin yllä olevassa esimerkissä: sarake voi vaihtua jos siirryt vasemmalle/oikealle, mutta rivi ei voi vaihtua jos siirryt ylöspäin/alaspäin.

-   `=A1` ei lukitse mitään. Sekä rivi- että sarakeosoite muuttuu, kun kopioit tai vedät solun tiedot muualle.

[Lukitus on erittäin hyödyllistä tilastollisessa analyysissa]{.underline}. Usein haluat laskea jonkun laskutoiminnon useammalle riville tai sarakkeelle, mutta osa laskutoiminnosta pysyy aina samana soluviittauksena. Voit silloin lukita ne soluviittaukset, jotka eivät tulisi muuttua, ja jättää muut auki, jolloin varmistat funktion toimivuuden kaikissa soluissa.

[Muista aina tarkistaa kopioinnin/vetomonistuksen kaavion oikeellisuus!]{.underline}

## Funktiot {#sec-funktiot-teoria}

Excelin laskennat tehdään **funktioilla**. Funktio on vähän kuin tehdas, joka ottaa sisään jonkun raakamateriaalin (arvon), tekee sille jotain (laskennan tai muunnoksen), ja sylkäisee ulos uuden tuotteen (uuden arvon).

Funktio aloitetaan aina yhtäsuuruusmerkillä `=`. Sen jälkeen tulee funktion nimi ISOILLA KIRJAIMILLA, esim. `SUMMA` tai `AINUTKERTAISET.ARVOT`. Jos funktiossa on useampi sana nimessä, ne erotellaan pisteellä `.`

Funktion lopussa on sulut `()`. Näiden sisälle asetetaan funktion **parametrit**, eli määritellään, mille arvolle jotain tulisi tehdä sekä muita funktion asetuksia.

Kun funktio suoritetaan, voidaan sanoa että funktio **kutsutaan**. Kun funktio on kutsuttu, se **palauttaa** jonkun arvon.

[Esimerkkinä voidaan ottaa summafunktio]{.underline}:

`=SUMMA(A1:A4)`

Summafunktio ottaa yhden parametrin, jota voidaan kutsua `alue`-nimellä. Tämä parametri osoittaa funktiolle, mikä solualue pitäisi summata yhteen. Yllä olevassa esimerkissä tämä on määritelty alueeksi `A1:A4`, eli kaikki solut A1:n ja A4:n väliltä: `A1 + A2 + A3 + A3`.

Funktioihin voi syöttää joko suoran arvon tai viittauksen toiseen soluun, jossa on sopiva arvo. Jotkut funktiot, kuten summafunktio, ottavat **matriisin** parametrinä, jolloin määritellään useampi solu. Toiset, kuten `=ONVIRH()`, ottavat vain yhden arvon, eli yhden solun. Jotkut funktiot eivät ota mitään parametrejä, kuten funktio `TOSI()` (joka palauttaa totuusarvon `TOSI`, eli 1).

## Dynaamiset matriisit {#sec-dynaamiset-matriisit}

Excelin O365-versiossa uutena toimintona ovat **dynaamiset matriisit**. Vaikka nimi kuulostaakin hieman vaikealta, näiden käyttö on aika yksinkertaista.

[Dynaaminen matriisi on tulos, jonka kaava on asetettu vain yhteen soluun, mutta joka **levittyy** useamman solun ylitse]{.underline}. Esimerkkinä voidaan käyttää `SUODATA`-funktiota. Funktio ottaa data-alueen sekä jonkun ehdon, ja palauttaa kaikki solut data-alueelta joiden rivit täyttävät kyseisen ehdon. Tämä tarkoittaa, että funktio voi palauttaa erikokoisia matriiseja, riippuen ehdosta.

Ennen vanhaan, Excelissä piti määritellä, kuinka suurelle alueelle matriisi palautetaan. Dynaamisten matriisien myötä näin ei enää ole! Yllä kuvailtu `SUODATA`-funktio palauttaa nyt niin suuren matriisin, kuin tarvitaan.

Dynaamisissa matriiseissa erikoisuus on, että [matriisin palauttava funktio löytyy **vain** ensimmäisestä solusta]{.underline} (ylävasemmasta solusta, jos kyseessä on kaksiulotteinen matriisi; ylimmästä solusta, jos kyseessä on rivimatriisi; vasemmanpuolisesta solusta, jos kyseessä on sarakematriisi).

::: {#fig-viit-esimerkki02 layout-nrow="2" layout-align="center"}
![Arvot näkyvissä](pics/viittaaminen/viit_esimerkki02a.png){#fig-viit-esimerkki02a}

![Kaavat näkyvissä](pics/viittaaminen/viit_esimerkki02b.png){#fig-viit-esimerkki02b}

Dynaamiset matriisit
:::

Kuvassa [-@fig-viit-esimerkki02] esiintyy kaksi saraketta, joissa on alkuperäisiä arvoja. A-sarakkeessa arvot vaihtelevat yhden ja kymmenen välillä, ja B-sarakkeessa arvot ovat joku arvoista `0, 1, -1`. Soluun D1 olen lisännyt `SUODATA`-funktion. Funktio ottaa kaikki arvot alueella `A1:A10`, ja palauttaa ne rivit, joiden vastaava arvo alueella `B1:B10` *ei ole* -1.

Funktio palauttaa rivimatriisin, jossa on vähemmän rivejä kuin alkuperäisissä sarakkeissa - koska minähän suodatin pois kaikki joiden B-matriisin arvo on -1. Jos kuitenkin katsoo miten kaava esiintyy (@fig-viit-esimerkki02b), huomaa, että kaava on kirjoitettu vain ensimmäiseen soluun, D1. Koska `SUODATA`-funktio palauttaa dynaamisen matriisin, funktio levittyy tarvitsemalle alueelleen - tämän tunnistaa kuvasta haalean sinisestä laatikosta.

Dynaamiset matriisit ovat erittäin tehokkaita, koska niiden avulla et tarvitse etukäteen tietää, kuinka suurelle alueelle matriisin tulisi levittäytyä.

Dynaamisilla matriiseilla on ominaisvirhe: **#LEVITTYMINEN!** Tämä voi esiintyä mm. jos levittymisalueella on jokin arvo solussa, mikä estää levittymisen. Dynaamiset matriisit toimivat vain, jos koko levittymisalue on tyhjä!
